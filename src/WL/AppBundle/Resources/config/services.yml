services:
    repo.factory:
        class: WL\AppBundle\Lib\RepositoryFactory
        arguments: ["@api_kit.config.cache.memcache", "@categories.allowed"]

    repo.factory.cache.file:
        class: WL\AppBundle\Lib\RepositoryFactory
        arguments: ["@api_kit.config.cache.file", "@categories.allowed"]

    repo.products:
        factory: ["@repo.factory"]
        class: WL\AppBundle\Lib\Repository\ProductsRepository
        factory_method: getProductsRepository

    repo.products.async:
        factory_service: repo.factory
        class: WL\AppBundle\Lib\Repository\ProductsAsyncRepository
        factory_method: getProductsAsyncRepository

    repo.categories:
        factory_service: repo.factory
        class: Nokaut\ApiKit\Repository\CategoriesRepository
        factory_method: getCategoriesRepository

    repo.categories.cache.file:
        factory_service: repo.factory.cache.file
        class: Nokaut\ApiKit\Repository\CategoriesAsyncRepository
        factory_method: getCategoriesRepository

    repo.categories.async:
        factory_service: repo.factory
        class: Nokaut\ApiKit\Repository\CategoriesAsyncRepository
        factory_method: getCategoriesAsyncRepository

    repo.offers:
        factory_service: repo.factory
        class: Nokaut\ApiKit\Repository\OffersRepository
        factory_method: getOffersRepository

    repo.offers.async:
        factory_service: repo.factory
        class: Nokaut\ApiKit\Repository\OffersAsyncRepository
        factory_method: getOffersAsyncRepository

    repo.async:
        factory_service: repo.factory
        class: Nokaut\ApiKit\Repository\AsyncRepository
        factory_method: getAsyncRepository

    categories.allowed:
        class: WL\AppBundle\Lib\CategoriesAllowed
        arguments: [%categories%]

    menu.mega:
        class: WL\AppBundle\Lib\Menu\MegaMenuBuilder
        arguments: ["@repo.factory.cache.file", "@categories.allowed"]

    menu.dropDown:
        class: WL\AppBundle\Lib\Menu\DropDownMenuBuilder
        arguments: ["@repo.factory.cache.file"]

    menu.factory:
        class: WL\AppBundle\Lib\MenuFactory

    menu.main.factory:
        class: WL\AppBundle\Lib\Menu\MenuInterface
        factory: ["@menu.factory", newInstance]
        arguments: ["@categories.allowed", "@menu.mega", "@menu.dropDown"]

    pre.fetchs:
        class: WL\AppBundle\Lib\Listener\PreAsyncFetchListener
        arguments: ["@service_container"]
        tags:
          - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }

    photo.url:
        class: Nokaut\ApiKit\Helper\PhotoUrl

    cache.memcache:
        class: WL\AppBundle\Lib\Cache\Memcache
        arguments: [%memcache_url%, %memcache_port%, %cache_default_lifetime%, %cache_enabled%, %api_token%]
    cache.file:
        class: WL\AppBundle\Lib\Cache\CacheFile
        arguments: [%kernel.cache_dir%, %cache_menu_lifetime%, %cache_menu_enabled%, %api_token%]

    helper.price:
        class: WL\AppBundle\Lib\Helper\Price

    helper.click:
        class: WL\AppBundle\Lib\Helper\ClickUrl
        arguments: ["@service_container"]

    helper.url_search:
        factory_class: WL\AppBundle\Lib\Helper\UrlSearchFactory
        class: WL\AppBundle\Lib\Helper\UrlSearch
        factory_method: newInstance
        arguments: ["@categories.allowed", "@repo.categories.cache.file"]

    api_kit.config.cache.memcache:
        class: Nokaut\ApiKit\Config
        calls:
          - [setApiAccessToken, [%api_token%]]
          - [setApiUrl, [%api_url%]]
          - [setCache, ["@cache.memcache"]]
          - [setLogger, ["@logger"]]

    api_kit.config.cache.file:
        class: Nokaut\ApiKit\Config
        calls:
          - [setApiAccessToken, [%api_token%]]
          - [setApiUrl, [%api_url%]]
          - [setCache, ["@cache.file"]]
          - [setLogger, ["@logger"]]

    sitemap.urls:
        class: WL\AppBundle\Lib\SiteMap\SiteMapUrls
        arguments: [%domain%, "@router", "@repo.products", "@repo.categories", "@categories.allowed", "@monolog.logger.cli"]

    breadcrumb.builder:
        factory_class: WL\AppBundle\Lib\Breadcrumbs\BreadcrumbsBuilderFactory
        class: WL\AppBundle\Lib\Breadcrumbs\BreadcrumbsBuilder
        factory_method: newInstance
        arguments: ["@categories.allowed"]


    twig.chunk_extension:
        class: WL\AppBundle\Lib\Twig\ChunkExtension
        tags:
          - { name: twig.extension }

    twig.click_extension:
        class: WL\AppBundle\Lib\Twig\ClickUrlExtension
        arguments: ["@helper.click"]
        tags:
          - { name: twig.extension }

    twig.dictionary_extension:
        class: WL\AppBundle\Lib\Twig\DictionaryExtension
        tags:
          - { name: twig.extension }

    twig.productUrl_extension:
        class: WL\AppBundle\Lib\Twig\ProductUrlExtension
        arguments: ["@service_container", "@helper.click"]
        tags:
          - { name: twig.extension }

